[{"tags":{},"filePath":"/packages/components/src/ComboBox/src/ComboBox.tsx","description":"Combo box components enable users to choose a single option from a collapsible list, optimizing space efficiency.\n\n[View Documentation](TODO)","displayName":"CompoundComboBox","methods":[],"props":{"children":{"defaultValue":null,"description":"The items of the ComboBox.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":true,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"fieldChildren":{"defaultValue":null,"description":"The field children of the ComboBox. This includes the field label, field description, and field errors.","name":"fieldChildren","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"footer":{"defaultValue":null,"description":"The footer of the ComboBox.","name":"footer","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MutableRefObject<HTMLInputElement>"}},"isAutoMenuWidth":{"defaultValue":null,"description":"If `true`, the select menu will not be the width of the trigger and instead be the width of its contents.","name":"isAutoMenuWidth","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"isFluid":{"defaultValue":{"value":"false"},"description":"If `true`, the select will take all available width.","name":"isFluid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"items":{"defaultValue":null,"description":"Item objects in the collection.","name":"items","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"listBoxProps":{"defaultValue":null,"description":"The list box props.","name":"listBoxProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ListBoxProps<T>"}},"necessityIndicator":{"defaultValue":null,"description":"Whether the required state should be shown as an asterisk or a label, which would display (Optional) on all non required field labels.","name":"necessityIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"\"label\" | \"asterisk\""}},"placeholder":{"defaultValue":null,"description":"The placeholder text when the select is empty.","name":"placeholder","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"popoverProps":{"defaultValue":null,"description":"The popover props.","name":"popoverProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"PopoverProps"}},"prefix":{"defaultValue":null,"description":"An icon or text to display at the start of the select trigger.","name":"prefix","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":{"value":"\"sm\""},"description":"The size of the select.","name":"size","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<ComboBoxSize>"}},"triggerProps":{"defaultValue":null,"description":"The props for the select's trigger.","name":"triggerProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"(Omit<GroupProps, keyof StyledSystemProps> & StyledSystemProps)"}},"footerProps":{"defaultValue":null,"description":"The props for the Footer.","name":"footerProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"FooterProps"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ComboBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"validationBehavior":{"defaultValue":{"value":"'native'"},"description":"Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.","name":"validationBehavior","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"}],"required":false,"type":{"name":"\"native\" | \"aria\""}},"onSelectionChange":{"defaultValue":null,"description":"Handler that is called when the selection changes.","name":"onSelectionChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((key: Key | null) => void)"}},"selectedKey":{"defaultValue":null,"description":"The currently selected key in the collection (controlled).","name":"selectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key | null"}},"defaultSelectedKey":{"defaultValue":null,"description":"The initial selected key in the collection (uncontrolled).","name":"defaultSelectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key"}},"shouldFocusWrap":{"defaultValue":null,"description":"Whether keyboard navigation is circular.","name":"shouldFocusWrap","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"defaultItems":{"defaultValue":null,"description":"The list of ComboBox items (uncontrolled).","name":"defaultItems","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"onOpenChange":{"defaultValue":null,"description":"Method that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.","name":"onOpenChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((isOpen: boolean, menuTrigger?: MenuTriggerAction) => void)"}},"inputValue":{"defaultValue":null,"description":"The value of the ComboBox input (controlled).","name":"inputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"defaultInputValue":{"defaultValue":null,"description":"The default value of the ComboBox input (uncontrolled).","name":"defaultInputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"onInputChange":{"defaultValue":null,"description":"Handler that is called when the ComboBox input value changes.","name":"onInputChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((value: string) => void)"}},"allowsCustomValue":{"defaultValue":null,"description":"Whether the ComboBox allows a non-item matching input value to be set.","name":"allowsCustomValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"menuTrigger":{"defaultValue":{"value":"'input'"},"description":"The interaction required to display the ComboBox menu.","name":"menuTrigger","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MenuTriggerAction"}},"disabledKeys":{"defaultValue":null,"description":"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.","name":"disabledKeys","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<Key>"}},"isDisabled":{"defaultValue":null,"description":"Whether the input is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isReadOnly":{"defaultValue":null,"description":"Whether the input can be selected but not changed by the user.","name":"isReadOnly","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isRequired":{"defaultValue":null,"description":"Whether user input is required on the input before form submission.","name":"isRequired","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"isInvalid":{"defaultValue":null,"description":"Whether the input value is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"validate":{"defaultValue":null,"description":"A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.","name":"validate","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"((value: ComboBoxValidationValue) => true | ValidationError | null)"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"name":{"defaultValue":null,"description":"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).","name":"name","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"defaultFilter":{"defaultValue":null,"description":"The filter function used to determine if a option should be included in the combo box list.","name":"defaultFilter","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((textValue: string, inputValue: string) => boolean)"}},"formValue":{"defaultValue":{"value":"'key'"},"description":"Whether the text or key of the selected item is submitted as part of an HTML form.\nWhen `allowsCustomValue` is `true`, this option does not apply and the text is always submitted.","name":"formValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"\"text\" | \"key\""}},"allowsEmptyCollection":{"defaultValue":null,"description":"Whether the combo box allows the menu to be open when the collection is empty.","name":"allowsEmptyCollection","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ComboBoxRenderProps & { defaultClassName: string; }) => string)"}},"ref":{"defaultValue":null,"description":"","name":"ref","declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"ForwardedRef<HTMLDivElement>"}}},"groups":{"default":{"children":{"defaultValue":null,"description":"The items of the ComboBox.","name":"children","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":true,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"fieldChildren":{"defaultValue":null,"description":"The field children of the ComboBox. This includes the field label, field description, and field errors.","name":"fieldChildren","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"footer":{"defaultValue":null,"description":"The footer of the ComboBox.","name":"footer","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MutableRefObject<HTMLInputElement>"}},"isAutoMenuWidth":{"defaultValue":null,"description":"If `true`, the select menu will not be the width of the trigger and instead be the width of its contents.","name":"isAutoMenuWidth","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"isFluid":{"defaultValue":{"value":"false"},"description":"If `true`, the select will take all available width.","name":"isFluid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"items":{"defaultValue":null,"description":"Item objects in the collection.","name":"items","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"listBoxProps":{"defaultValue":null,"description":"The list box props.","name":"listBoxProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ListBoxProps<T>"}},"necessityIndicator":{"defaultValue":null,"description":"Whether the required state should be shown as an asterisk or a label, which would display (Optional) on all non required field labels.","name":"necessityIndicator","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"\"label\" | \"asterisk\""}},"placeholder":{"defaultValue":null,"description":"The placeholder text when the select is empty.","name":"placeholder","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"popoverProps":{"defaultValue":null,"description":"The popover props.","name":"popoverProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"PopoverProps"}},"prefix":{"defaultValue":null,"description":"An icon or text to display at the start of the select trigger.","name":"prefix","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":{"value":"\"sm\""},"description":"The size of the select.","name":"size","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<ComboBoxSize>"}},"triggerProps":{"defaultValue":null,"description":"The props for the select's trigger.","name":"triggerProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"(Omit<GroupProps, keyof StyledSystemProps> & StyledSystemProps)"}},"footerProps":{"defaultValue":null,"description":"The props for the Footer.","name":"footerProps","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"FooterProps"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ComboBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"validationBehavior":{"defaultValue":{"value":"'native'"},"description":"Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.","name":"validationBehavior","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"RACValidation"}],"required":false,"type":{"name":"\"native\" | \"aria\""}},"onSelectionChange":{"defaultValue":null,"description":"Handler that is called when the selection changes.","name":"onSelectionChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((key: Key | null) => void)"}},"selectedKey":{"defaultValue":null,"description":"The currently selected key in the collection (controlled).","name":"selectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key | null"}},"defaultSelectedKey":{"defaultValue":null,"description":"The initial selected key in the collection (uncontrolled).","name":"defaultSelectedKey","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SingleSelection"}],"required":false,"type":{"name":"Key"}},"defaultItems":{"defaultValue":null,"description":"The list of ComboBox items (uncontrolled).","name":"defaultItems","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"Iterable<T>"}},"onOpenChange":{"defaultValue":null,"description":"Method that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.","name":"onOpenChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((isOpen: boolean, menuTrigger?: MenuTriggerAction) => void)"}},"inputValue":{"defaultValue":null,"description":"The value of the ComboBox input (controlled).","name":"inputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"defaultInputValue":{"defaultValue":null,"description":"The default value of the ComboBox input (uncontrolled).","name":"defaultInputValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"string"}},"onInputChange":{"defaultValue":null,"description":"Handler that is called when the ComboBox input value changes.","name":"onInputChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((value: string) => void)"}},"allowsCustomValue":{"defaultValue":null,"description":"Whether the ComboBox allows a non-item matching input value to be set.","name":"allowsCustomValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"menuTrigger":{"defaultValue":{"value":"'input'"},"description":"The interaction required to display the ComboBox menu.","name":"menuTrigger","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"MenuTriggerAction"}},"disabledKeys":{"defaultValue":null,"description":"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.","name":"disabledKeys","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<Key>"}},"isDisabled":{"defaultValue":null,"description":"Whether the input is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isReadOnly":{"defaultValue":null,"description":"Whether the input can be selected but not changed by the user.","name":"isReadOnly","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isRequired":{"defaultValue":null,"description":"Whether user input is required on the input before form submission.","name":"isRequired","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"isInvalid":{"defaultValue":null,"description":"Whether the input value is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"validate":{"defaultValue":null,"description":"A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.","name":"validate","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"Validation"}],"required":false,"type":{"name":"((value: ComboBoxValidationValue) => true | ValidationError | null)"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"name":{"defaultValue":null,"description":"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).","name":"name","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"InputDOMProps"}],"required":false,"type":{"name":"string"}},"defaultFilter":{"defaultValue":null,"description":"The filter function used to determine if a option should be included in the combo box list.","name":"defaultFilter","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"((textValue: string, inputValue: string) => boolean)"}},"formValue":{"defaultValue":{"value":"'key'"},"description":"Whether the text or key of the selected item is submitted as part of an HTML form.\nWhen `allowsCustomValue` is `true`, this option does not apply and the text is always submitted.","name":"formValue","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"\"text\" | \"key\""}},"allowsEmptyCollection":{"defaultValue":null,"description":"Whether the combo box allows the menu to be open when the collection is empty.","name":"allowsEmptyCollection","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"ComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ComboBoxRenderProps & { defaultClassName: string; }) => string)"}}},"events":{"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<HTMLInputElement, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}}},"accessibility":{"shouldFocusWrap":{"defaultValue":null,"description":"Whether keyboard navigation is circular.","name":"shouldFocusWrap","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaComboBoxProps"}],"required":false,"type":{"name":"boolean"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}}},"layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/ComboBox/src/ComboBox.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}}}}]