[{"tags":{},"filePath":"/packages/components/src/ListBox/src/ListBox.tsx","description":"","displayName":"ListBox","methods":[],"props":{"isFluid":{"defaultValue":null,"description":"Whether or not the ListBox is 100% of its container's width.","name":"isFluid","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"isInvalid":{"defaultValue":null,"description":"Whether or not the ListBox is in an invalid state.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean"}},"isLoading":{"defaultValue":null,"description":"Whether data is currently being loaded.","name":"isLoading","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean"}},"onLoadMore":{"defaultValue":null,"description":"Handler that is called when more items should be loaded, e.g. while scrolling near the bottom.","name":"onLoadMore","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"(() => void)"}},"selectionIndicator":{"defaultValue":{"value":"\"check\""},"description":"The selection indicator to use. Only available if the selection mode is not \"none\".\nWhen set to \"input\", the selection indicator will be an either a radio or checkbox based on the selection mode.","name":"selectionIndicator","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"\"input\" | \"check\""}},"size":{"defaultValue":{"value":"\"sm\""},"description":"A ListBox can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<ListBoxItemSize>"}},"loadingListBoxItemProps":{"defaultValue":null,"description":"The props of the ListBoxItem.","name":"loadingListBoxItemProps","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"ListBoxItemProps<T>"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ListBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The contents of the collection.","name":"children","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"selectionBehavior":{"defaultValue":null,"description":"How multiple selection should behave in the collection.","name":"selectionBehavior","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"SelectionBehavior"}},"onAction":{"defaultValue":null,"description":"Handler that is called when a user performs an action on an item. The exact user event depends on\nthe collection's `selectionBehavior` prop and the interaction modality.","name":"onAction","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaListBoxProps"}],"required":false,"type":{"name":"((key: Key) => void)"}},"autoFocus":{"defaultValue":null,"description":"Whether to auto focus the listbox or an option.","name":"autoFocus","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean | FocusStrategy"}},"shouldFocusWrap":{"defaultValue":null,"description":"Whether focus should wrap around when the end/start is reached.","name":"shouldFocusWrap","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean"}},"items":{"defaultValue":null,"description":"Item objects in the collection.","name":"items","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<T>"}},"disabledKeys":{"defaultValue":null,"description":"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.","name":"disabledKeys","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<Key>"}},"selectionMode":{"defaultValue":null,"description":"The type of selection that is allowed in the collection.","name":"selectionMode","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"SelectionMode"}},"disallowEmptySelection":{"defaultValue":null,"description":"Whether the collection allows empty selection.","name":"disallowEmptySelection","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"boolean"}},"selectedKeys":{"defaultValue":null,"description":"The currently selected keys in the collection (controlled).","name":"selectedKeys","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"Iterable<Key> | \"all\""}},"defaultSelectedKeys":{"defaultValue":null,"description":"The initial selected keys in the collection (uncontrolled).","name":"defaultSelectedKeys","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"Iterable<Key> | \"all\""}},"onSelectionChange":{"defaultValue":null,"description":"Handler that is called when the selection changes.","name":"onSelectionChange","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"((keys: Selection) => void)"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"dragAndDropHooks":{"defaultValue":null,"description":"The drag and drop hooks returned by `useDragAndDrop` used to enable drag and drop behavior for the ListBox.","name":"dragAndDropHooks","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"DragAndDropHooks"}},"renderEmptyState":{"defaultValue":null,"description":"Provides content to display when there are no items in the list.","name":"renderEmptyState","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"((props: ListBoxRenderProps) => ReactNode)"}},"layout":{"defaultValue":{"value":"'stack'"},"description":"Whether the items are arranged in a stack or grid.","name":"layout","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"\"grid\" | \"stack\""}},"orientation":{"defaultValue":{"value":"'vertical'"},"description":"The primary orientation of the items. Usually this is the\ndirection that the collection scrolls.","name":"orientation","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"Orientation"}},"dependencies":{"defaultValue":null,"description":"Values that should invalidate the item cache when using dynamic collections.","name":"dependencies","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"any[]"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ListBoxRenderProps & { defaultClassName: string; }) => string)"}},"onScroll":{"defaultValue":null,"description":"Handler that is called when a user scrolls. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event).","name":"onScroll","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ScrollableProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ScrollableProps"}],"required":false,"type":{"name":"((e: UIEvent<HTMLDivElement, UIEvent>) => void)"}}},"groups":{"default":{"isFluid":{"defaultValue":null,"description":"Whether or not the ListBox is 100% of its container's width.","name":"isFluid","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"isInvalid":{"defaultValue":null,"description":"Whether or not the ListBox is in an invalid state.","name":"isInvalid","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean"}},"isLoading":{"defaultValue":null,"description":"Whether data is currently being loaded.","name":"isLoading","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean"}},"onLoadMore":{"defaultValue":null,"description":"Handler that is called when more items should be loaded, e.g. while scrolling near the bottom.","name":"onLoadMore","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"(() => void)"}},"selectionIndicator":{"defaultValue":{"value":"\"check\""},"description":"The selection indicator to use. Only available if the selection mode is not \"none\".\nWhen set to \"input\", the selection indicator will be an either a radio or checkbox based on the selection mode.","name":"selectionIndicator","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"\"input\" | \"check\""}},"size":{"defaultValue":{"value":"\"sm\""},"description":"A ListBox can vary in size.","name":"size","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"ResponsiveProp<ListBoxItemSize>"}},"loadingListBoxItemProps":{"defaultValue":null,"description":"The props of the ListBoxItem.","name":"loadingListBoxItemProps","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"ListBoxItemProps<T>"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: ListBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"children":{"defaultValue":null,"description":"The contents of the collection.","name":"children","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"ReactNode | ((item: T) => ReactNode)"}},"selectionBehavior":{"defaultValue":null,"description":"How multiple selection should behave in the collection.","name":"selectionBehavior","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"SelectionBehavior"}},"autoFocus":{"defaultValue":null,"description":"Whether to auto focus the listbox or an option.","name":"autoFocus","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean | FocusStrategy"}},"shouldFocusWrap":{"defaultValue":null,"description":"Whether focus should wrap around when the end/start is reached.","name":"shouldFocusWrap","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"boolean"}},"items":{"defaultValue":null,"description":"Item objects in the collection.","name":"items","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<T>"}},"disabledKeys":{"defaultValue":null,"description":"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.","name":"disabledKeys","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionBase"}],"required":false,"type":{"name":"Iterable<Key>"}},"selectionMode":{"defaultValue":null,"description":"The type of selection that is allowed in the collection.","name":"selectionMode","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"SelectionMode"}},"disallowEmptySelection":{"defaultValue":null,"description":"Whether the collection allows empty selection.","name":"disallowEmptySelection","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"boolean"}},"selectedKeys":{"defaultValue":null,"description":"The currently selected keys in the collection (controlled).","name":"selectedKeys","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"Iterable<Key> | \"all\""}},"defaultSelectedKeys":{"defaultValue":null,"description":"The initial selected keys in the collection (uncontrolled).","name":"defaultSelectedKeys","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"Iterable<Key> | \"all\""}},"onSelectionChange":{"defaultValue":null,"description":"Handler that is called when the selection changes.","name":"onSelectionChange","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"MultipleSelection"}],"required":false,"type":{"name":"((keys: Selection) => void)"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"dragAndDropHooks":{"defaultValue":null,"description":"The drag and drop hooks returned by `useDragAndDrop` used to enable drag and drop behavior for the ListBox.","name":"dragAndDropHooks","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"DragAndDropHooks"}},"renderEmptyState":{"defaultValue":null,"description":"Provides content to display when there are no items in the list.","name":"renderEmptyState","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"((props: ListBoxRenderProps) => ReactNode)"}},"layout":{"defaultValue":{"value":"'stack'"},"description":"Whether the items are arranged in a stack or grid.","name":"layout","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"\"grid\" | \"stack\""}},"orientation":{"defaultValue":{"value":"'vertical'"},"description":"The primary orientation of the items. Usually this is the\ndirection that the collection scrolls.","name":"orientation","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ListBoxProps"}],"required":false,"type":{"name":"Orientation"}},"dependencies":{"defaultValue":null,"description":"Values that should invalidate the item cache when using dynamic collections.","name":"dependencies","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"CollectionProps"}],"required":false,"type":{"name":"any[]"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: ListBoxRenderProps & { defaultClassName: string; }) => string)"}},"onScroll":{"defaultValue":null,"description":"Handler that is called when a user scrolls. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event).","name":"onScroll","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ScrollableProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"ScrollableProps"}],"required":false,"type":{"name":"((e: UIEvent<HTMLDivElement, UIEvent>) => void)"}}},"events":{"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}}},"accessibility":{"onAction":{"defaultValue":null,"description":"Handler that is called when a user performs an action on an item. The exact user event depends on\nthe collection's `selectionBehavior` prop and the interaction modality.","name":"onAction","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaListBoxProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaListBoxProps"}],"required":false,"type":{"name":"((key: Key) => void)"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}}},"layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/ListBox/src/ListBox.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}}}}]