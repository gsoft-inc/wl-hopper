[{"tags":{},"filePath":"/packages/components/src/inputs/src/NumberField.tsx","description":"","displayName":"NumberField","methods":[],"props":{"prefix":{"defaultValue":null,"description":"An icon or text to display at the start of the input.","name":"prefix","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":{"value":"\"md\""},"description":"The size of the NumberField.","name":"size","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"ResponsiveProp<\"sm\" | \"md\">"}},"isFluid":{"defaultValue":{"value":"false"},"description":"If `true`, the NumberField will take all available width.","name":"isFluid","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"MutableRefObject<HTMLInputElement>"}},"necessityIndicator":{"defaultValue":null,"description":"Whether the required state should be shown as an asterisk or a label, which would display (Optional) on all non required field labels.","name":"necessityIndicator","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"\"label\" | \"asterisk\""}},"inputGroupProps":{"defaultValue":null,"description":"The props for the InputGroup.","name":"inputGroupProps","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"InputGroupProps"}},"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: NumberFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"validationBehavior":{"defaultValue":{"value":"'native'"},"description":"Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.","name":"validationBehavior","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RACValidation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RACValidation"}],"required":false,"type":{"name":"\"native\" | \"aria\""}},"decrementAriaLabel":{"defaultValue":null,"description":"A custom aria-label for the decrement button. If not provided, the localized string \"Decrement\" is used.","name":"decrementAriaLabel","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"}],"required":false,"type":{"name":"string"}},"incrementAriaLabel":{"defaultValue":null,"description":"A custom aria-label for the increment button. If not provided, the localized string \"Increment\" is used.","name":"incrementAriaLabel","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"}],"required":false,"type":{"name":"string"}},"isWheelDisabled":{"defaultValue":null,"description":"Enables or disables changing the value with scroll.","name":"isWheelDisabled","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"}],"required":false,"type":{"name":"boolean"}},"formatOptions":{"defaultValue":null,"description":"Formatting options for the value displayed in the number field.\nThis also affects what characters are allowed to be typed by the user.","name":"formatOptions","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"NumberFormatOptions"}},"isDisabled":{"defaultValue":null,"description":"Whether the input is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isReadOnly":{"defaultValue":null,"description":"Whether the input can be selected but not changed by the user.","name":"isReadOnly","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isRequired":{"defaultValue":null,"description":"Whether user input is required on the input before form submission.","name":"isRequired","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"isInvalid":{"defaultValue":null,"description":"Whether the input value is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"validate":{"defaultValue":null,"description":"A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.","name":"validate","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"}],"required":false,"type":{"name":"((value: number) => true | ValidationError | null)"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"value":{"defaultValue":null,"description":"The current value (controlled).","name":"value","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"}],"required":false,"type":{"name":"number"}},"defaultValue":{"defaultValue":null,"description":"The default value (uncontrolled).","name":"defaultValue","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"}],"required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Handler that is called when the value changes.","name":"onChange","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"}],"required":false,"type":{"name":"((value: number) => void)"}},"minValue":{"defaultValue":null,"description":"The smallest value allowed for the input.","name":"minValue","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"}],"required":false,"type":{"name":"number"}},"maxValue":{"defaultValue":null,"description":"The largest value allowed for the input.","name":"maxValue","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"}],"required":false,"type":{"name":"number"}},"step":{"defaultValue":null,"description":"The amount that the input value changes with each increment or decrement \"tick\".","name":"step","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"}],"required":false,"type":{"name":"number"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"onCopy":{"defaultValue":null,"description":"Handler that is called when the user copies text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncopy).","name":"onCopy","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ClipboardEventHandler<HTMLInputElement>"}},"onCut":{"defaultValue":null,"description":"Handler that is called when the user cuts text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncut).","name":"onCut","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ClipboardEventHandler<HTMLInputElement>"}},"onPaste":{"defaultValue":null,"description":"Handler that is called when the user pastes text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste).","name":"onPaste","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ClipboardEventHandler<HTMLInputElement>"}},"onCompositionStart":{"defaultValue":null,"description":"Handler that is called when a text composition system starts a new text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event).","name":"onCompositionStart","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"CompositionEventHandler<HTMLInputElement>"}},"onCompositionEnd":{"defaultValue":null,"description":"Handler that is called when a text composition system completes or cancels the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event).","name":"onCompositionEnd","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"CompositionEventHandler<HTMLInputElement>"}},"onCompositionUpdate":{"defaultValue":null,"description":"Handler that is called when a new character is received in the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event).","name":"onCompositionUpdate","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"CompositionEventHandler<HTMLInputElement>"}},"onSelect":{"defaultValue":null,"description":"Handler that is called when text in the input is selected. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event).","name":"onSelect","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ReactEventHandler<HTMLInputElement>"}},"onBeforeInput":{"defaultValue":null,"description":"Handler that is called when the input value is about to be modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event).","name":"onBeforeInput","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"FormEventHandler<HTMLInputElement>"}},"onInput":{"defaultValue":null,"description":"Handler that is called when the input value is modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event).","name":"onInput","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"FormEventHandler<HTMLInputElement>"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: NumberFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: NumberFieldRenderProps & { defaultClassName: string; }) => string)"}},"name":{"defaultValue":null,"description":"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).","name":"name","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputDOMProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputDOMProps"}],"required":false,"type":{"name":"string"}}},"groups":{"default":{"prefix":{"defaultValue":null,"description":"An icon or text to display at the start of the input.","name":"prefix","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":{"value":"\"md\""},"description":"The size of the NumberField.","name":"size","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"ResponsiveProp<\"sm\" | \"md\">"}},"isFluid":{"defaultValue":{"value":"false"},"description":"If `true`, the NumberField will take all available width.","name":"isFluid","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"ResponsiveProp<boolean>"}},"inputRef":{"defaultValue":null,"description":"A ref for the HTML input element.","name":"inputRef","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"MutableRefObject<HTMLInputElement>"}},"necessityIndicator":{"defaultValue":null,"description":"Whether the required state should be shown as an asterisk or a label, which would display (Optional) on all non required field labels.","name":"necessityIndicator","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"\"label\" | \"asterisk\""}},"inputGroupProps":{"defaultValue":null,"description":"The props for the InputGroup.","name":"inputGroupProps","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"InputGroupProps"}},"style":{"defaultValue":null,"description":"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.","name":"style","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"CSSProperties | ((values: NumberFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"validationBehavior":{"defaultValue":{"value":"'native'"},"description":"Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.","name":"validationBehavior","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RACValidation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RACValidation"}],"required":false,"type":{"name":"\"native\" | \"aria\""}},"formatOptions":{"defaultValue":null,"description":"Formatting options for the value displayed in the number field.\nThis also affects what characters are allowed to be typed by the user.","name":"formatOptions","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"NumberFieldProps"}],"required":false,"type":{"name":"NumberFormatOptions"}},"isDisabled":{"defaultValue":null,"description":"Whether the input is disabled.","name":"isDisabled","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isReadOnly":{"defaultValue":null,"description":"Whether the input can be selected but not changed by the user.","name":"isReadOnly","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputBase"}],"required":false,"type":{"name":"boolean"}},"isRequired":{"defaultValue":null,"description":"Whether user input is required on the input before form submission.","name":"isRequired","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"isInvalid":{"defaultValue":null,"description":"Whether the input value is invalid.","name":"isInvalid","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"}],"required":false,"type":{"name":"boolean"}},"validate":{"defaultValue":null,"description":"A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.","name":"validate","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"Validation"}],"required":false,"type":{"name":"((value: number) => true | ValidationError | null)"}},"autoFocus":{"defaultValue":null,"description":"Whether the element should receive focus on render.","name":"autoFocus","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusableProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusableProps"}],"required":false,"type":{"name":"boolean"}},"value":{"defaultValue":null,"description":"The current value (controlled).","name":"value","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"}],"required":false,"type":{"name":"number"}},"defaultValue":{"defaultValue":null,"description":"The default value (uncontrolled).","name":"defaultValue","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"}],"required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Handler that is called when the value changes.","name":"onChange","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"ValueBase"}],"required":false,"type":{"name":"((value: number) => void)"}},"minValue":{"defaultValue":null,"description":"The smallest value allowed for the input.","name":"minValue","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"}],"required":false,"type":{"name":"number"}},"maxValue":{"defaultValue":null,"description":"The largest value allowed for the input.","name":"maxValue","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"}],"required":false,"type":{"name":"number"}},"step":{"defaultValue":null,"description":"The amount that the input value changes with each increment or decrement \"tick\".","name":"step","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RangeInputBase"}],"required":false,"type":{"name":"number"}},"id":{"defaultValue":null,"description":"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).","name":"id","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"DOMProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"DOMProps"}],"required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"The children of the component. A function may be provided to alter the children based on component state.","name":"children","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"RenderProps"}],"required":false,"type":{"name":"ReactNode | ((values: NumberFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},"className":{"defaultValue":null,"description":"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.","name":"className","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"StyleRenderProps"}],"required":false,"type":{"name":"string | ((values: NumberFieldRenderProps & { defaultClassName: string; }) => string)"}},"name":{"defaultValue":null,"description":"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).","name":"name","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputDOMProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"InputDOMProps"}],"required":false,"type":{"name":"string"}}},"events":{"onFocus":{"defaultValue":null,"description":"Handler that is called when the element receives focus.","name":"onFocus","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onBlur":{"defaultValue":null,"description":"Handler that is called when the element loses focus.","name":"onBlur","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((e: FocusEvent<Element, Element>) => void)"}},"onFocusChange":{"defaultValue":null,"description":"Handler that is called when the element's focus status changes.","name":"onFocusChange","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"FocusEvents"}],"required":false,"type":{"name":"((isFocused: boolean) => void)"}},"onKeyDown":{"defaultValue":null,"description":"Handler that is called when a key is pressed.","name":"onKeyDown","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onKeyUp":{"defaultValue":null,"description":"Handler that is called when a key is released.","name":"onKeyUp","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"KeyboardEvents"}],"required":false,"type":{"name":"((e: KeyboardEvent) => void)"}},"onCopy":{"defaultValue":null,"description":"Handler that is called when the user copies text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncopy).","name":"onCopy","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ClipboardEventHandler<HTMLInputElement>"}},"onCut":{"defaultValue":null,"description":"Handler that is called when the user cuts text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncut).","name":"onCut","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ClipboardEventHandler<HTMLInputElement>"}},"onPaste":{"defaultValue":null,"description":"Handler that is called when the user pastes text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste).","name":"onPaste","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ClipboardEventHandler<HTMLInputElement>"}},"onCompositionStart":{"defaultValue":null,"description":"Handler that is called when a text composition system starts a new text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event).","name":"onCompositionStart","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"CompositionEventHandler<HTMLInputElement>"}},"onCompositionEnd":{"defaultValue":null,"description":"Handler that is called when a text composition system completes or cancels the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event).","name":"onCompositionEnd","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"CompositionEventHandler<HTMLInputElement>"}},"onCompositionUpdate":{"defaultValue":null,"description":"Handler that is called when a new character is received in the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event).","name":"onCompositionUpdate","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"CompositionEventHandler<HTMLInputElement>"}},"onSelect":{"defaultValue":null,"description":"Handler that is called when text in the input is selected. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event).","name":"onSelect","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"ReactEventHandler<HTMLInputElement>"}},"onBeforeInput":{"defaultValue":null,"description":"Handler that is called when the input value is about to be modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event).","name":"onBeforeInput","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"FormEventHandler<HTMLInputElement>"}},"onInput":{"defaultValue":null,"description":"Handler that is called when the input value is modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event).","name":"onInput","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"TextInputDOMEvents"}],"required":false,"type":{"name":"FormEventHandler<HTMLInputElement>"}}},"accessibility":{"decrementAriaLabel":{"defaultValue":null,"description":"A custom aria-label for the decrement button. If not provided, the localized string \"Decrement\" is used.","name":"decrementAriaLabel","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"}],"required":false,"type":{"name":"string"}},"incrementAriaLabel":{"defaultValue":null,"description":"A custom aria-label for the increment button. If not provided, the localized string \"Increment\" is used.","name":"incrementAriaLabel","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"}],"required":false,"type":{"name":"string"}},"isWheelDisabled":{"defaultValue":null,"description":"Enables or disables changing the value with scroll.","name":"isWheelDisabled","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaNumberFieldProps"}],"required":false,"type":{"name":"boolean"}},"aria-label":{"defaultValue":null,"description":"Defines a string value that labels the current element.","name":"aria-label","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-labelledby":{"defaultValue":null,"description":"Identifies the element (or elements) that labels the current element.","name":"aria-labelledby","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"Identifies the element (or elements) that describes the object.","name":"aria-describedby","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}},"aria-details":{"defaultValue":null,"description":"Identifies the element (or elements) that provide a detailed, extended description for the object.","name":"aria-details","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"AriaLabelingProps"}],"required":false,"type":{"name":"string"}}},"layout":{"slot":{"defaultValue":null,"description":"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.","name":"slot","parent":{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"SlotProps"},"declarations":[{"fileName":"/packages/components/src/inputs/src/NumberField.tsx","name":"SlotProps"}],"required":false,"type":{"name":"string | null"}}}}}]